/*https://developer.mozilla.org/pt-BR/docs/Web/CSS*/
/*https://www.maujor.com/*/
/*https://caniuse.com/*/ /*USAR BASTANTE PARA ESCLARECER DÚVIDAS SOBRE COMANDOS*/

/*Charset permite colocar letras com acentos no CSS*/
@charset "UTF-8";
/*Comando para importar fontes do Google Fonts*/
@import url('https://fonts.googleapis.com/css2?family=Kaushan+Script&display=swap');
/*Inserir fontes no código baixadas de algum site*/
@font-face {
   font-family: ;
   src: url('NomedaFonte') format();
}
/*
   Tipos de format()
   - opentype (otf)
   - truetype (ttf)
   - embedded-opentype
   - trutype-att (att = Apple Advanced Typography)
   - svg
*/

/*O que está dentro do asterístico refere-se as configurações globais das CSS*/
*{

}
body{

    /*--TEXTOS--*/
   /*Buscar fontes da Web - https://fonts.google.com/ ou https://www.dafont.com/pt/ */

   /*Buscar fontes em imagens - https://www.whatfontis.com/ ou https://www.fontsquirrel.com/ ou https://www.myfonts.com/?gclid=CjwKCAiA_omPBhBBEiwAcg7smXTQAVR19jSnC9RzocOsNmvxKZZBrdY1pRei3AzliZVwjWqJ91y3lBoCeFUQAvD_BwE*/

    font-family: Verdana, Geneva, Tahoma, sans-serif; /*Tipos do texto*/
       
    /*Medidas absolutas: cm, mm, in, px, pt, pc*/
   /*Medidas relativas: em, ex, rem, vw, vh*/
    font-size: 24px;/*tamanho da fonte OBS: utilizar ou px ou em é recomendável usar a em*/
    /*OBS 16px normalmente é 1em, tamanho padrão usado pelos navegadores*/

    font-weight: 700 ou bold; /*Controla o peso da fonte*/
   /*Tipos de peso: lighter, normal, bold e bolder*/ 
   /*Tipos de peso: 100 a 900*/ 

    font-style: italic; /*Estilo da fonte*/

   /*Shorthand font/*
   /*font-style -> font-weigth -> font-size -> font-family*/
   font: italic bolder 2em 'Work sans', sans-serif;

   text-decoration: underline; /* Texto sublinhado*/
   text-align: left, center,	right, justify;/*Alinhamento do texto	*/
   text-transform: capitalize, uppercase, lowercase, none; /*Letras maiúsculas, minúsculas, etc*/
   text-indent: 10px, 1.2em, 0.8rem, 10%; /* Controla o tamanho da indentação que é colocado antes de uma linha de texto em um bloco */
   text-indent: 15px; /*Dá um espaçamento a esquerda do texto, somente na primeira linha, criando parágrafo*/
   text-shadow: 1px 1px 0px black; /*Sombra em textos*/
   line-height: 20px;	/* tamanho da altura de	cada linha	*/
   letter-spacing: 3px; /* tamanho	do espaço entre cada letra */
   word-spacing: 5px;	/* tamanho do espaço entre cada	palavra	*/
   float: right; /* desloca textos ou imangens, fazendo que flutuem com o texto*/
   list-style: none; /*Retira de uma tag de Lista (li) os pontos de marcação de lista*/
   /*------*/

   /*--CORES--*/
   /*Para criar palheta de cores acessar*/
   /*https://color.adobe.com/
   https://paletton.com/
   https://coolors.co/*/
   /*Para capturar cores acessar a extensão do Chrome Collorzilla*/

   color: #616146; /*	Forma 1 de declarar cores MAIS UTILIZADA*/
   color:darkgreen; /*	Forma 2 de declarar cores */
   color: rgb(255,200,300);/*	Forma 3 de declarar cores */
   color: rgba(255,200,300,0.95); /*Fundo transparente com 95%*/
   color:#3366ff;
   color:#36f; /*forma simplificada de escrever a notação hexadecimal acima*/
   color: hsl(240, 100%, 50%);
   /*------*/

   /*--FUNDOS--*/
   /*https://www.maujor.com/tutorial/propriedade-css-para-estilizacao-de-background.php*/
   background-color: blue;/*Cor de fundo*/
   background-image: url(../img/icone-youtube.svg);/*Imagem de fundo*/
   background-image: linear-gradient(to right, white,blue);/*Para fazer gradientes de cores*/
   background-image: linear-gradient(to bottom,#4FFFDC 20%,#3FCCB0 40%,#3D8577);/*Pode-se colocar tb percentual das cores*/
   background-image: radial-gradient(to circle, #9198e2,#6d59c0,#e33f5f,#fdd579);/*Para fazer gradientes de cores*/
   background-size: cover; /*Tamanho do fundo*/
   background-position: top .6rem center; /*Posição do fundo*/
   background-repeat: no-repeat; /*Define a maneira como a imagem de fundo é posicionada*/
   background-attachment: fixed; /*Define se a imagem de fundo "rola" ou não com a tela*/
   background-clip: border-box; /*Define a posição de origem da imagem no box*/
   /*------*/

}

/*--SELETORES PERSONALIZADOS--*/
/*o # representa ID na conxeão com o HTML (só pode 1 elemento)*/
#id{
   text-align: center;
   background-color: blanchedalmond;
}
/*o . representa class na conxeão com o HTML (podem vários elementos)*/
.class{
   padding: 1.5em; /*padding na classe está 50% maior*/
   margin: 10rem; /*margin na classe será 10 vezes maior*/
}
/*-----*/

/*--PSEUDO-CLASSES - Definem estados de elementos dentro do HTML--*/
/*Houver = quando eu passar o mouse por cima*/
.class:hover{
   background-color: burlywood;
}
/*Visited = usado basicamante em link TAG <a> para identificar links já visitados*/
.class:visited{
   color: cadetblue;
}
/*Active = usado para verificar a atividade de uma classe, um click do mouse por exemplo*/
.class:active{
   font-family: Arial, Helvetica, sans-serif;
}
/*Checked = */
.class:checked{
   
}
/*Empty = Verifica se aclasse está vazia*/
.class:empty{
  
}
/*Focus = */
.class:focus{
   
}
/*------*/

/*--PSEUDO-ELEMENTOS - Atingem o conteúdo periférico do elemento --*/

.class::before{
   
}
.class::after{
   
}
/*------*/


/*--CHILD--*/
/*Comando que afeta somente o parágrafo que estiver dentro do elemento da classe*/
.class > p{
   display: none;
}
/*------*/


/*--BOX MODELING--*/

/*--Dimensões--*/
.class{
height: 10px, 1rem, 2em, 10%; /* Controla a altura do elemento */
min-height: 10px, 1rem, 2em, 10%; /* Controla a altura mínima que um elemento pode ter */ 
max-height: 10px, 1rem, 2em, 10%; /* Controla a altura máxima que um elemento pode ter */
width: 10px, 1rem, 2em, 10%; /* Controla a largura do elemento */ 
min-width: 10px, 1rem, 2em, 10%;  /* Controla a largura mínima que um elemento pode ter */ 
max-width: 10px, 1rem, 2em, 10%; /* Controla a largura máxima que um elemento pode ter */

/*Estilos de bordas*/
border-color:	#61619b;
border-style: solid; /*groove - linha sobreposta / double - borda dupla / dashed - tracejada / dotted - pontilhada 
border-width: 1px;  
/*Tipos de bordas*/
border-top: 1px	solid	red; /*	borda vermelha em cima */
border-right: 1px	solid	red; /*	borda vermelha à direita */
border-bottom: 1px solid	red; /*	borda vermelha embaixo */
border-left: 1px	solid	red; /*	borda vermelha à esquerda */
border: 1px	solid	red; /*Sintaxe resumida se elementos top/bottom e right/left são iguais (shorthand)*/
border-radius: 4px; /*	borda arredondada */

/*Borda personalizada*/
border-image-source: url('arquivo.png');
border-image-slice: 10;
border-image-repeat: repeat; /*ou stretch*/
border-image: url('arquivo.png') 10 repeat; /*shorthand*/



outline: #3FCCB0; /*Contorno, fica por fora do elemento e da borda e dentro da margem*/

/*--Espaçametos--*/
/*O padding define uma distância entre o limite do elemento, sua borda e seu respectivo conteúdo (espaçamento interno)*/
padding-top: 20px; /*Espaço de 20 px em cima */
padding-right: 10px; /*Espaço de 10 px a direita */
padding-bottom: 20px; /*Espaço de 20 px em baixo */
padding-left: 10px; /*Espaço de 10 px a esquerda*/
padding: 10px; /*Sintaxe resumida se todos os elementos forem iguais (shorthand)*/
padding: 20px 10px; /*Sintaxe resumida se elementos top/bottom e right/left são iguais*/
padding: 20px 10px 30px; /*Sintaxe resumida o primeiro para o top, o segundo para right/left e o terceiro para o bottom (shorthand)*/
padding: 0	auto; /*Qaundo colocamos auto o navegador define os espaçamentos conforme o espaço disponível*/

/*O margin é bem parecida com a propriedade	padding, exceto que ela adiciona espaço após o limite do elemento (espaçamento externo)*/
margin-top: 20px; /*Espaço de 20 px em cima */
margin-right: 10px; /*Espaço de 10 px a direita */
margin-bottom: 20px; /*Espaço de 20 px em baixo */
margin-left: 10px; /*Espaço de 10 px a esquerda*/
margin: 10px; /*Sintaxe resumida se todos os elementos forem iguais (shorthand)*/
margin: 20px 10px; /*Sintaxe resumida se elementos top/bottom e right/left são iguais (shorthand)*/
margin: 20px 10px 30px; /*Sintaxe resumida o primeiro para o top, o segundo para right/left e o terceiro para o bottom (shorthand)*/
margin: 0 auto; /*Quando colocamos auto o navegador define os espaçamentos conforme o espaço disponível*/
margin: auto; /*Centraliza a box no window*/

/*Display*/
/*O display é prodriedade que delimita o item/elemento para apresentação na tela*/
display: none;/*O elemento não aparece na tela.*/
display: block; /*O elemento ocupa toda a largura da página ou da TAG, ou seja, se torna um bloco, permite que o elemento tenha altura, largura e outras propriedades, se diminuimos o tamanho desse elemento o espaço restante será ocupado por uma margin não removível. Exemplos de Tag box level <h1>, <p>, <div>, <nav>, <main>*/
display: inline; /*O elemento ocupa apenas o espaço necessário a largura da página ou da TAG, ou seja, fica na mesma linha de outras elementos, este elemento não recebe propriedades de tamanho. Exemplos de Tag box level <a>, <span>, <img>, <button>, <label>*/
display: inline-block; /* O elemento ocupa apenas o espaço necessário a largura da página ou da TAG contudo pula linha, faz com que uma TAG inicialmente Box Level fique na mesma linha de outras TAGS, elemento não recebe propriedades de tamanho*/
display: table;

/*A propriedade CSS box-sizing é utilizada para alterar a propriedade padrão da box model, usada para calcular 
larguras (widths) e alturas (heights) dos elementos*/
/*https://developer.mozilla.org/pt-BR/docs/Web/CSS/box-sizing*/
box-sizing: content-box; /*Essa é o estilo padrão. . As propriedades width (largura) e height (altura) são medidas incluindo só o conteúdo, mas não o padding, border ou margin*/
box-sizing: padding-box; /*As propriedades de largura (width) e de altura (height) incluem o tamanho padding size, mas não incluem a propriedade border ou margem.*/
box-sizing: border-box; /*As propriedades de largura (width) e de altura (height) incluem o tamanho padding size e a propriedade border, mas não incluem a propriedade margin.*/


/*--Sombras--*/
box-shadow: 1px 1px 1px 1px black; /*Os valores são: Deslocamento horizontal, deslocamento vertical, espalhamento (blur), alcance (spread) e cor*/

}
/*------*/

/*--VARIÁVEIS--*/

/*Declaração*/
:root{
   --cor0: red;
   --cor1: green;
   --cor2: blue;

   --fonte-padrao: Arial, Verdana, Helvetica, sans-serif;
   --fonte-secunc: Georgia, 'Times New Roman', Times, serif;
}
/*Aplicação*/
.class{
   color: var(--cor0);
   font-family: var(--fonte-padrao);
}

/*------*/

/*--RESPONSIVIDADE*/

/*Em imagens, de uma forma bem simples podemos colocar width: 100%; para a mesma ficar responsiva tendo como base na TAG pai*/
body{
  width: 100%; 
}














body{

    /*--VAZAMENTO--*/
    overflow: *visible, hidden, scroll, auto*; /* Controla o comportamento dos elementos internos que "vazam" do espaço definido pela tag mãe */ 
    overflow-x: *visible, hidden, scroll, auto*; /* Controla o comportamento dos elementos internos q ue "vazam" do espaço horizontal definido pela tag mãe */ 
    overflow-y: *visible, hidden, scroll, auto*; /* Controla o comportamento dos elementos internos q ue "vazam" do espaço vertial definido pela tag mãe */ 
   
      


   display: flex;
   /* - O elemento se  torna	um	flex container, a	partir daí podemos manipular todos os elementos
   filhos desse flex container com	propriedades novas.
   Quando aplicamos display: flex para um elemento, todos os filhos ficam um do lado do outro como
   se estivessem sob o efeito de display: inline*/
   display: grid;
   /* - O elemento se  torna	um	grid container (tabela), a	partir daí podemos manipular todos os elementos
   filhos desse flex container com	propriedades novas.*/
   

}
/*VERTICAL-ALIGN*/
.elemento{
   vertical-align: baseline, top, middle, bottom; /* Alinha verticalmente elementos que são inline ou inline-block */
}

/*o inherit faz com que uma imagem assuma a altura e largura da sua TAG pai <div> sem precisar repetir os valores, o  valor inherit
indica para o elemento filho que ele deve utilizar o mesmo valor presente no elemento pai*/
img	{
    width:	inherit;
    height:	inherit;
}

/*EM e REM tem o mesmo conceito de % mas ao invés de serem baseadas no tamanho de um elemento, essas medidas são	baseadas	em	tamanho
de	fonte. EM usa o tamanho	da	fonte	do	elemento pai e	REM usa o tamanho	da	fonte	do	<html>*/
body{
   padding: 10px;
   margin: 10px;
   font-size: 20px;
}



/*---MÍDIA QUERYS--*/
/*As media querys permitem que o design da página seja responsivo, ou seja, possa ser visto em diversos equipamentos
com desktop, laptops, smartTvs, celulares, tablets*/
@media only screen and (min-width: 320px){
   body{
      background-color:	blue;
      color:white;
   }
}
@media print{
   body{
         background-color:	white;
         color:	black;
      }
}
/*FLEXBOX*/
.my-container{
   /*Propriedade que habilita o Flexbox
   https://css-tricks.com/snippets/css/a-guide-to-flexbox/#background*/
   display: flex;

   /*justify-content: justify-content: Essa propriedade ajusta horizontalmente os elementos filhos	do	flex container*/
   justify-content: flex-start;/*É o valor padrão. Os	elementos ficam grudados um do lado	do	outro	à esquerda do flex container*/
   justify-content: flex-end;	/*Os elementos	ficam	grudados	um	do	lado do outro à direita	do	flex container.*/
   justify-content: center; 	/*Os elementos	ficam	grudados	um	do	lado do outro no meio do flex container.*/
   justify-content: space-between; /*O primeiro elemento fica totalmente à esquerda do flex container e o último fica totalmente 
                                    à direita. O restante dos elementos ficam distribuídos com um espaçamento igual entre eles*/
   justify-content: space-around; /* Cada elemento fica com um espaçamento igual em volta dele mesmo. Isso quer dizer que o primeiro 
                                 elemento vai ter um espaçamento maior à direita do que à esquerda porque vai somar com o espaçamento 
                                 à esquerda do segundo elemento.*/
   justify-content: space-evenly; /*Corrige o "problema" do valor acima. Os elementos terão um espaçamento igual em ambos os lados.*/

   /*align-items: Essa propriedade ajusta verticalmente os elementos filhos do flex container*/
   align-items: stretch; /*É o valor padrão. Os elementos se "esticam" para que todos fiquem com a mesma altura.*/
   align-items: flex-start; /*Os elementos ficam todos alinhados com o topo do flex container.*/
   align-items: flex-end; /*Os elementos ficam todos alinhados com a base do flex container.*/
   align-items: center; /*Os elementos ficam todos alinhados com o meio do flex container.*/
   align-items: baseline; /*Os elementos ficam alinhados com base do conteúdo textual de cada um deles.*/

   /*flex-wrap: Essa propriedade trabalha com a "quebra de linha" dos elementos em linha.*/
   flex-wrap: nowrap; /*É o valor padrão. Os elementos vão ficar um do lado do outro mesmo que não exista mais espaço horizontal.*/
   flex-wrap: wrap; /*Os elementos que não cabem mais no espaço lateral recebem uma quebra de linha, ou seja, vão para a linha debaixo.*/
   flex-wrap: wrap-reverse; /*Os elementos que não cabem mais no espaço lateral recebem uma quebra de linha acima, 
                           ou seja, vão para a linha de cima.*/
}
/*TRANSBORDO*/
.my-container{
   /*A propriedade overflow especifica quando o conteúdo de um elemento de nível de bloco deve ser cortado, exibido com barras de rolagem 
   ou se transborda do elemento.*/
   overflow: visible;/*Valor padrão. O conteúdo não é cortado e pode ser renderizado para fora da caixa de conteúdo*/
   overflow: hidden;/*O conteúdo é cortado e nenhuma barra de rolagem é exibida.*/
   overflow: scroll;/*O conteúdo é acessível através de barras de rolagem que são exibidas mesmo que o conteúdo não precise. Isso evita 
                     o problema de barras de rolagem aparecendo e desaparecendo quando o conteúdo é dinâmico. Impressoras podem imprimir 
                     o conteúdo vazado.*/
   overflow: initial;/*Depende do navegador utilizado. Navegadores desktop como o Firefox geralmente exibem barras de rolagem apenas 
                     quando necessário.*/
   
}
/*POSICIONAMENTO*/
/*https://medium.com/jaguaribetech/saiba-tudo-sobre-a-propriedade-position-30a7004daa6c*/
.class{
   /*A propriedade position é utilizada para manipular a localização e o comportamento de elementos em uma página ou em um container. 
   Para que funcione temos que dizer em que posição o elemento estará top, bottom, left ou right*/
   position: static; /*Valor padrão, Não é necessário declarar.*/
   position: absolute; /*Com o valor absolute, você pode posicionar qualquer elemento de acordo com sua posição dentro do seu elemento 
                        pai que tenha um valor position diferente de static. Se seus ancestrais tiverem um valor position:static, ele 
                        irá se referenciar pelo body.*/
   position: fixed; /*Já o valor fixed, é usado para fixar um elemento em determinada coordenada da página. Resultado, o elemento ficará 
                     fixo em sua coordenada determinada a medida em que o scroll é rolado.*/ 
   position: relative; /*os elementos irão se posicionar de acordo com sua localização tendo como referência o body ou container*/
   position: sticky; /*Com o valor sticky, o elemento irá se comportar uma hora como position:relative(imagem da esquerda), em outra como 
                     position:fixed(imagem da direita).*/
}



/*https://developer.mozilla.org/pt-BR/docs/Web/CSS/transform*/
.class{
   /*A Propriedade CSS transform permite modificar o espaço coordenado do modelo de formatação CSS. Usando-a, elementos podem ser 
   traduzidos, rotacionados, ter seu tamanho ajustado e inclinados de acordo com os valores definidos.*/
   transform: translate(-50% -50%); /*Faz o elemento se deslocar nos eixos X e Y*/
   transform: translate3d(50% 30% 20%); /*Faz o elemento  se deslocar nos eixos X, Y e Z*/
   transform: translateX();
   transform: translateY();
   transform: translateZ();
   transform: rotate(10deg 20deg); /*Faz o elemento  se deslocar nos eixos X e Y*/
   transform: rotate3d(10deg 20deg 30deg); /*Faz o elemento  se deslocar nos eixos X, Y e Z*/
   transform: rotateX();
   transform: rotateY();
   transform: rotateZ();
   transform: scale(); /*Faz o elemento se estender (escalar) nos eixos X, Y e Z*/
   transform: scaleX();
   transform: scaleY();
   transform: scaleZ();
}

/*GRID*/
/*https://developer.mozilla.org/pt-BR/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout*/
.grid-container{
/*Grid é uma malha formada pela interseção de um conjunto de linhas horizontais e um conjunto de linhas verticais – um dos conjuntos 
define colunas e outro linhas. Dentro de um  grid, respeitando-se a configuração criada pelas suas linhas, pode-se inserir elementos 
da marcação.*/
/*A propriedade de grid permite que nós usemos outra unidade de medida: fr (que significa fraction/ fração)*/
   display: grid;
   display: inline-grid;
   grid-column: 4;/*Qtd de colunas da grid*/
   grid-row: 2; /*Qtd de linhas da grid*/
   grid-template-columns: 1fr	1fr 1fr; /*estamos dizendo que queremos 3 colunas que ocupem 1 fração do espaço disponível (1/3) do espaço*/
   grid-template-columns: repeat(3, 1fr);/*Grids grandes, com muitas tracks podem usar a notação repeat() para repetir todas ou uma seção 
                                          de track listing.*/ 
   grid-auto-rows: 200px; /*define altura das linhas*/
   grid-auto-columns: 200px;/*define largura das colunas*/
   grid-area: span 1; /*serve para indicar o nome da área em que cada elemento deverá ocupar na grid*/
   grid-auto-rows: minmax(100px, auto); /*o minmax define altura mínima das tracks (linhas) do grid*/
   grid-auto-columns: minmax(100px, auto); /*o minmax define a largura mínima das tracks (colunas) do grid*/
   grid-template-rows: 1fr 1fr; /*queremos	duas	linhas	que	ocupam	o	mesmo	espaço*/
   grid-row: span 2;/*A propriedade grid-row é usada apenas nos elementos filhos de um grid container e ela recebe dois valores: 
                     linha de início e linha de término. No nosso exemplo usamos o valor span que diz que queremos mesclar linhas e o 2 
                     a quantidade de linhas que vamos mesclarQuando usamos o span o próximo valor vai ser a quantidade de linhas ou colunas 
                     que vamos mesclar, portanto não indicamos qual linha é a linha de término. Quando não colocamos o valor de término o 
                     navegador coloca automaticamente span 1 que quer dizer "ocupe apenas 1 linha/coluna*/
   grid-template-areas: none; /*melhora a capacidade de movimentação de elementos dentro do grid*/
   grid-column-start: 1;/*Junto com o código abaixo diz que o elemento vai ocupar da primeira a terceira coluna do grid*/
   grid-column-end: 3;/*Junto com o código acima diz que o elemento vai ocupar da primeira a terceira coluna do grid*/
   grid-row-start: 1;/*Junto com o código abaixo diz que o elemento vai ocupar da primeira a segunda linha do grid*/
   grid-row-end: 2; /*Junto com o código acima diz que o elemento vai ocupar da primeira a segunda linha do grid*/
   grid-column-gap: 1em; /*Cria (espaçamentos ou separadores) entre células do grid para as colunas*/
   grid-row-gap: 1rem; /*Cria (espaçamentos ou separadores) entre células do grid para as linhas*/
   z-index: 1;/*controla a ordem na qual os itens irão empilhar-se*/
}
/*ANIMAÇÕES*/

/*WAYPOINTS*/
/*http://imakewebthings.com/waypoints/*/

/*AOS*/
/*https://michalsnik.github.io/aos/*/


/*BOOTSTRAP*/
/*https://getbootstrap.com.br/*/
/*https://jquery.com/*/
/*Barra de navegação*/
.navbar{}

/*Icones para inserir no projeto*/
/*https://ionic.io/ionicons/v4*/
/*https://fontawesome.com/*/










